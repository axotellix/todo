
// [ FUNCTIONS ]

// set > CSS variable
@function varset( $expr ) {

    // [ get > input data ]
    $inp:       explode($expr, " ");
    $var:       nth($inp, 1);
    $operator:  nth($inp, 2);
    $val:       nth($inp, 3);


    // [ process > expression ]

	 // remove > '--' if already have one
	@if str-slice($var, 1, 2) == '--' {
		$var: str-slice($var, 3, -1);
	}
	 // remove > 'px' when multiplying or dividing
    @if $operator == '*' or $operator == '/' {
        $val: str-slice($val, 1, -3);
    }

	// [ apply > expression ]
    @return calc( var(--#{$var}) #{$operator} #{$val});
}


// ------------------------------
 // [ BORROWED ]

// split > string into array
@function explode($string, $delimiter) {

	$result: ();
	@if $delimiter == "" {
		@for $i from 1 through str-length($string) {
			$result: append($result, str-slice($string, $i, $i));
		}
		@return $result;
	}
	$exploding: true;
	@while $exploding {
		$d-index: str-index($string, $delimiter);
		@if $d-index {
			@if $d-index > 1 {
				$result: append($result, str-slice($string, 1, $d-index - 1));
				$string: str-slice($string, $d-index + str-length($delimiter));
			} @else if $d-index == 1 {
				$string: str-slice($string, 1, $d-index + str-length($delimiter));
			} @else {
				$result: append($result, $string);
				$exploding: false;
			}
		} @else {
			$result: append($result, $string);
			$exploding: false;
		}
	}
	@return $result;

}